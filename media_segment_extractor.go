// media_segment_extractor
// generated by ChatGPT 4o

package main

import (
	"flag"
	"fmt"
	"github.com/u2takey/ffmpeg-go"
	"log"
	"path/filepath"
)

func main() {
	inputFile := flag.String("input", "", "Input media file path (mp4 or mp3)")
	outputFile := flag.String("output", "", "Output media file path (mp4 or mp3)")
	startMark := flag.String("start", "00:00:00", "Start mark (format: HH:MM:SS)")
	duration := flag.String("duration", "00:00:10", "Duration (format: HH:MM:SS)")

	flag.Parse()

	if *inputFile == "" || *outputFile == "" {
		flag.Usage()
		log.Fatal("input and output file paths are required")
	}

	inputExt := filepath.Ext(*inputFile)
	outputExt := filepath.Ext(*outputFile)

	if inputExt != outputExt {
		log.Fatal("input and output file extensions must match and be either .mp4 or .mp3")
	}

	if inputExt != ".mp4" && inputExt != ".mp3" {
		log.Fatal("unsupported file extension. Only .mp4 and .mp3 are supported")
	}

	fmt.Printf("Extracting segment from %s to %s, starting at %s, for duration %s\n", *inputFile, *outputFile, *startMark, *duration)

	err := ffmpeg_go.Input(*inputFile, ffmpeg_go.KwArgs{"ss": *startMark}).Output(*outputFile, ffmpeg_go.KwArgs{"t": *duration}).Run()
	if err != nil {
		log.Fatal(err)
	}

	log.Println("Media segment extracted successfully.")
}
